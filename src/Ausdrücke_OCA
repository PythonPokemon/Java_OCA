
In der Java Oracle Certified Associate (OCA) Prüfung müssen Sie verschiedene Arten von Ausdrücken kennen und verstehen.
Ein Ausdruck ist eine Kombination aus Literalen, Variablen, Operatoren und Methodenaufrufen,
die zu einem Wert ausgewertet werden.

Hier sind die wichtigsten Typen von Ausdrücken, die Sie für die OCA-Prüfung kennen sollten:
------------------------------------------------------------------------------------------------------------------------
1. Arithmetische Ausdrücke
Arithmetische Ausdrücke verwenden die arithmetischen Operatoren, um numerische Berechnungen durchzuführen.

int sum = 10 + 20;  // Addition
int difference = 30 - 10;  // Subtraktion
int product = 5 * 6;  // Multiplikation
double quotient = 15.0 / 4.0;  // Division
int remainder = 10 % 3;  // Modulo
------------------------------------------------------------------------------------------------------------------------
2. Vergleichs- und logische Ausdrücke
Diese Ausdrücke verwenden Vergleichs- und logische Operatoren, um boolesche Werte zu berechnen.

Vergleichsoperatoren:
int a = 10;
int b = 20;

boolean isEqual = (a == b);  // Gleichheit
boolean isNotEqual = (a != b);  // Ungleichheit
boolean isGreaterThan = (a > b);  // Größer als
boolean isLessThan = (a < b);  // Kleiner als
boolean isGreaterThanOrEqual = (a >= b);  // Größer oder gleich
boolean isLessThanOrEqual = (a <= b);  // Kleiner oder gleich

Logische Operatoren:
boolean bool1 = true;
boolean bool2 = false;

boolean andResult = bool1 && bool2;  // Logisches UND
boolean orResult = bool1 || bool2;  // Logisches ODER
boolean notResult = !bool1;  // Logisches NICHT
------------------------------------------------------------------------------------------------------------------------
3. Zuweisungsausdrücke
Diese Ausdrücke verwenden den Zuweisungsoperator (=), um Werte Variablen zuzuweisen.

int number = 10;
double pi = 3.14159;
String greeting = "Hello";
boolean isActive = true;
------------------------------------------------------------------------------------------------------------------------
4. Inkrement- und Dekrementausdrücke
Diese Ausdrücke verwenden die Inkrement- (++) und Dekrement- (--) Operatoren,
um den Wert einer Variablen zu erhöhen oder zu verringern.

int x = 10;

x++;  // Post-Inkrement: x wird um 1 erhöht, ergibt 11
++x;  // Prä-Inkrement: x wird um 1 erhöht, ergibt 12

x--;  // Post-Dekrement: x wird um 1 verringert, ergibt 11
--x;  // Prä-Dekrement: x wird um 1 verringert, ergibt 10
------------------------------------------------------------------------------------------------------------------------
5. String-Verkettungsausdrücke
Diese Ausdrücke verwenden den Verkettungsoperator (+), um Strings zusammenzuführen.

String firstName = "John";
String lastName = "Doe";

String fullName = firstName + " " + lastName;  // Verkettung von Strings
------------------------------------------------------------------------------------------------------------------------
6. Bedingte (ternäre) Ausdrücke
Diese Ausdrücke verwenden den ternären Operator (? :), um einen Wert basierend auf einer Bedingung auszuwählen.

int score = 85;
String result = (score >= 60) ? "Passed" : "Failed";  // Bedingter Ausdruck
------------------------------------------------------------------------------------------------------------------------
7. Typumwandlung (Casting) Ausdrücke
Diese Ausdrücke verwenden den Casting-Operator, um den Typ einer Variablen zu ändern.

double d = 10.5;
int i = (int) d;  // Casting von double zu int

int j = 100;
byte b = (byte) j;  // Casting von int zu byte
------------------------------------------------------------------------------------------------------------------------
8. Methodenaufrufe als Ausdrücke
Methodenaufrufe können ebenfalls Ausdrücke sein, die einen Wert zurückgeben.

int max = Math.max(10, 20);  // Methodenaufruf, der den maximalen Wert von zwei Zahlen zurückgibt

String greeting = "Hello, World!";
int length = greeting.length();  // Methodenaufruf, der die Länge des Strings zurückgibt
------------------------------------------------------------------------------------------------------------------------
9. Array-Zugriffs-Ausdrücke
Diese Ausdrücke verwenden den Array-Zugriffsoperator ([]), um auf Elemente eines Arrays zuzugreifen.

int[] numbers = {1, 2, 3, 4, 5};
int firstNumber = numbers[0];  // Zugriff auf das erste Element des Arrays
------------------------------------------------------------------------------------------------------------------------
Zusammenfassung mit Beispielen:

public class ExpressionsExample {
    public static void main(String[] args) {
        // Arithmetische Ausdrücke
        int sum = 10 + 20;
        int difference = 30 - 10;
        int product = 5 * 6;
        double quotient = 15.0 / 4.0;
        int remainder = 10 % 3;

        // Vergleichs- und logische Ausdrücke
        int a = 10;
        int b = 20;
        boolean isEqual = (a == b);
        boolean isNotEqual = (a != b);
        boolean isGreaterThan = (a > b);
        boolean isLessThan = (a < b);
        boolean isGreaterThanOrEqual = (a >= b);
        boolean isLessThanOrEqual = (a <= b);

        boolean bool1 = true;
        boolean bool2 = false;
        boolean andResult = bool1 && bool2;
        boolean orResult = bool1 || bool2;
        boolean notResult = !bool1;

        // Zuweisungsausdrücke
        int number = 10;
        double pi = 3.14159;
        String greeting = "Hello";
        boolean isActive = true;

        // Inkrement- und Dekrementausdrücke
        int x = 10;
        x++;
        ++x;
        x--;
        --x;

        // String-Verkettungsausdrücke
        String firstName = "John";
        String lastName = "Doe";
        String fullName = firstName + " " + lastName;

        // Bedingte (ternäre) Ausdrücke
        int score = 85;
        String result = (score >= 60) ? "Passed" : "Failed";

        // Typumwandlung (Casting) Ausdrücke
        double d = 10.5;
        int i = (int) d;

        int j = 100;
        byte b = (byte) j;

        // Methodenaufrufe als Ausdrücke
        int max = Math.max(10, 20);

        String greetingText = "Hello, World!";
        int length = greetingText.length();

        // Array-Zugriffs-Ausdrücke
        int[] numbers = {1, 2, 3, 4, 5};
        int firstNumber = numbers[0];

        // Ausgabe zur Überprüfung
        System.out.println("Arithmetische Ausdrücke:");
        System.out.println("Sum: " + sum);
        System.out.println("Difference: " + difference);
        System.out.println("Product: " + product);
        System.out.println("Quotient: " + quotient);
        System.out.println("Remainder: " + remainder);

        System.out.println("\nVergleichs- und logische Ausdrücke:");
        System.out.println("isEqual: " + isEqual);
        System.out.println("isNotEqual: " + isNotEqual);
        System.out.println("isGreaterThan: " + isGreaterThan);
        System.out.println("isLessThan: " + isLessThan);
        System.out.println("isGreaterThanOrEqual: " + isGreaterThanOrEqual);
        System.out.println("isLessThanOrEqual: " + isLessThanOrEqual);
        System.out.println("andResult: " + andResult);
        System.out.println("orResult: " + orResult);
        System.out.println("notResult: " + notResult);

        System.out.println("\nZuweisungsausdrücke:");
        System.out.println("number: " + number);
        System.out.println("pi: " + pi);
        System.out.println("greeting: " + greeting);
        System.out.println("isActive: " + isActive);

        System.out.println("\nInkrement- und Dekrementausdrücke:");
        System.out.println("x nach Inkrement und Dekrement: " + x);

        System.out.println("\nString-Verkettungsausdrücke:");
        System.out.println("Full Name: " + fullName);

        System.out.println("\nBedingte (ternäre) Ausdrücke:");
        System.out.println("Result: " + result);

        System.out.println("\nTypumwandlung (Casting) Ausdrücke:");
        System.out.println("Double zu Int: " + i);
        System.out.println("Int zu Byte: " + b);

        System.out.println("\nMethodenaufrufe als Ausdrücke:");
        System.out.println("Max: " + max);
        System.out.println("String Länge: " + length);

        System.out.println("\nArray-Zugriffs-Ausdrücke:");
        System.out.println("Erstes Element des Arrays: " + firstNumber);
    }
}
------------------------------------------------------------------------------------------------------------------------
Wichtige Punkte:
Arithmetische Ausdrücke: Berechnungen mit numerischen Werten.
Vergleichs- und logische Ausdrücke: Vergleiche und logische Operationen.
Zuweisungsausdrücke: Zuweisung von Werten zu Variablen.
Inkrement- und Dekrementausdrücke: Erhöhen oder Verringern von Variablenwerten.
String-Verkettungsausdrücke: Kombinieren von Zeichenfolgen.
Bedingte (ternäre) Ausdrücke: Auswählen eines Wertes basierend auf einer Bedingung.
Typumwandlung (Casting) Ausdrücke: Ändern des Datentyps einer Variable.
Methodenaufrufe als Ausdrücke: Verwenden von Methoden, die Werte zurückgeben.
Array-Zugriffs-Ausdrücke: Zugriff auf Elemente eines Arrays.

Diese Konzepte und Beispiele sollten Ihnen helfen,
die verschiedenen Arten von Ausdrücken für die Java OCA-Prüfung zu verstehen.