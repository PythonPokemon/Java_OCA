StackOverflowError
– Wird ausgelöst, wenn der Stapelspeicher (Stack) voll ist.
Dies passiert normalerweise durch unendliche Rekursion, bei der eine Methode sich selbst immer wieder aufruft,
ohne eine Abbruchbedingung zu erreichen.
------------------------------------------------------------------------------------------------------------------------
Regeln und Best Practices
------------------------------------------------------------------------------------------------------------------------
1.Vermeiden unendlicher Rekursion:

Stellen Sie sicher, dass jede rekursive Methode eine klare und erreichbare Abbruchbedingung hat,
um unendliche Rekursion zu vermeiden:

public static void rekursiveMethode(int count) {
    if (count == 0) {
        return;  // Abbruchbedingung
    }
    rekursiveMethode(count - 1);
}
------------------------------------------------------------------------------------------------------------------------
2.Verwendung von Iteration anstelle von Rekursion:

Wo möglich, verwenden Sie Iteration anstelle von Rekursion, insbesondere für Algorithmen, die tief rekursiv sind:

public static void iterativeMethode(int count) {
    while (count > 0) {
        // Logik hier
        count--;
    }
}
------------------------------------------------------------------------------------------------------------------------
3.Begrenzte Abfangstrategie:

  Obwohl Sie StackOverflowError abfangen können, sollte dies nur als letzter Ausweg betrachtet werden.
  Es ist besser, solche Fehler durch korrektes Programmieren zu vermeiden:

  try {
      rekursiveMethode(1);
  } catch (StackOverflowError e) {
      System.out.println("Fehler: Stapelspeicher ist voll.");
  }
------------------------------------------------------------------------------------------------------------------------
Fazit
Der StackOverflowError ist ein schwerwiegender Fehler,
der durch unendliche Rekursion oder ähnliche Probleme verursacht wird.
Durch ordnungsgemäße Programmierung, wie das Hinzufügen von Abbruchbedingungen zu rekursiven Methoden
oder das Verwenden von Iteration, können Sie solche Fehler vermeiden.
------------------------------------------------------------------------------------------------------------------------