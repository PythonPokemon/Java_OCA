Der Hauptunterschied zwischen den beiden Codes liegt in der Implementierung der equals()-Methode in der Student-Klasse.

Code 1: | test34 | package JAVA_OCA_Test_1.Aufgaben_30_bis_39;
In Code 1 wird die equals()-Methode nicht überschrieben.
Daher wird die Standardimplementierung der equals()-Methode von Object verwendet,
die die Objekte anhand ihrer Speicheradressen vergleicht.
Da das Objekt, das Sie entfernen möchten, mit new Student("James", 25) neu erstellt wird,
hat es eine andere Speicheradresse als die in der Liste enthaltenen Objekte,
selbst wenn sie die gleichen Attributwerte haben. Daher wird das Objekt nicht aus der Liste entfernt.

Code 2: | test56 | JAVA_OCA_Test_2.Aufgaben_50_bis_59;
In Code 2 wird die equals()-Methode überschrieben,
um die Objekte basierend auf ihren Attributwerten (Name und Alter) zu vergleichen.
Dadurch werden zwei Student-Objekte als gleich betrachtet, wenn sie den gleichen Namen und dasselbe Alter haben,
unabhängig von ihrer Speicheradresse. Daher wird das Objekt erfolgreich aus der Liste entfernt.

Insgesamt ermöglicht die Implementierung der equals()-Methode in Code 2 eine benutzerdefinierte Logik zum Vergleich
der Objekte, während in Code 1 die Standardimplementierung verwendet wird, die auf den Speicheradressen basiert.






